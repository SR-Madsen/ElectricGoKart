/************ ELECTRIC GO-KART MAIN ************/
#include <stdio.h>
#include "platform.h"
#include "xparameters.h"
#include "xil_printf.h"
#include "xscugic.h"
#include "xil_exception.h"

// User includes
#include "axiinterface.h"
#include "xadc.h"
#include "gpios.h"
#include "tasks.h"
#include "motorstructs.h"
#include "clarke_park.h"
#include "pi_controller.h"
#include "svpwm.h"

// User defines


// User prototypes
static void XAdcInterruptHandler(XAdcPs *XAdc);

// User variables


// XADC interrupt handler, which ensures timing of sensor measurements and Field-Oriented Control
static void XAdcInterruptHandler(XAdcPs *XAdc) {
	enablePrecharge();
	sensorProcessing();
	fieldOrientedControl();
	disablePrecharge();
}

int main()
{
    init_platform();

    initGpios();
    initXAdc();
    initGicXAdc((Xil_ExceptionHandler) XAdcInterruptHandler);
    initVariables();

    while(1) {
    	// TODO: Add timer to restrict UI task?
        communicationTask();
    }

    cleanup_platform();
    return 0;
}
